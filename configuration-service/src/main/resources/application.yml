#
#   This is the core configuration for a configuration service.  I have two examples here:
#
#       -  A configuration service which completelty loads the configuration for the services
#          from the local file server of the config service.  This should only be used for
#          demonstration purposes or for a small application with a limited number of services.
#
#       -  A configuraton service that uses a git-based repository to read the files from
#


####################################
#server:
#  port: 8888
#spring:
#  cloud:
#    config:
#      server:
#        encrypt.enabled: false
#        git:
#          uri: https://github.com/carnellj/config-repo/
#          searchPaths: userservice,organizationservice
#          username: native-cloud-apps
#          password: 0ffended


####
#Classpath and file-based solution
####

server:
   port: 8888
spring:
  profiles:
    active: native
  cloud:
     config:
       discovery:
         enabled: true
       server:
           native:
#              searchLocations: file://<chapter 3>/confsvr/src/main/resources/config/userservice,
#                               file://<chapter 3>confsvr/src/main/resources/config/organizationservice
               searchLocations: classpath:config/,
                                classpath:config/userservice,
                                classpath:config/orderservice,
                                classpath:config/zuulservice,
                                classpath:config/authservice

spring.jpa.database: "POSTGRESQL"
spring.jpa.show-sql: "true"
spring.jpa.hibernate.ddl-auto: "validate"
spring.jpa.properties.hibernate.dialect: "org.hibernate.dialect.PostgreSQLDialect"
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation: "true"

spring.datasource.platform:  "postgres"
spring.datasource.driverClassName: "org.postgresql.Driver"
spring.datasource.url: "jdbc:postgresql://database:5432/spring_cloud"
spring.datasource.username: "postgres"
spring.datasource.password: "{cipher}a4c9ae4c9e5a3f58b752503ba1b81400739ed85bb3a68678464044ee0d52570e" #postgres POST http://localhost:8888/encrypt
#spring.datasource.password: "postgres"

spring.flyway.enabled: "true" # Whether to enable flyway.
spring.flyway.encoding: "UTF-8" # Encoding of SQL migrations.
spring.flyway.locations: "classpath:db/migration"
